#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# MIT License
# Copyright (c) 2017 Susanow
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import sys
import susanow.ssnctl.vnf   as vnf
import susanow.ssnctl.port  as port
import susanow.ssnctl.ppp   as ppp
import susanow.ssnctl.nfvi  as nfvi
import susanow.ssnctl.d2    as d2


def usage():
    print("Usage: ssnctl [OPTIONS]\n")
    print("OPTIONS")
    print("  d2        operate d2(dynamic-thread-optimize)")
    print("  nfvi      operate nfvi                       ")
    print("  vnf       operate vnfs                       ")
    print("  port      operate ports                      ")
    print("  ppp       operate port-patch-panel           ")

def main():
    argc = len(sys.argv)
    argv = sys.argv
    if (argc < 2):
        usage()
        exit(-1)

    option = argv[1]
    if   (option == "nfvi"):  nfvi.main  (argc-1, argv[1:])
    elif (option == "vnf" ):  vnf.main   (argc-1, argv[1:])
    elif (option == "port"):  port.main  (argc-1, argv[1:])
    elif (option == "ppp" ):  ppp.main   (argc-1, argv[1:])
    elif (option == "d2"  ):  d2.main    (argc-1, argv[1:])
    else:
        print("ssnctl: option not found")
        usage()
        exit(-1)

if __name__ == '__main__':
    main()


